apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.scream3r:jssc:2.8.0'
    compile 'cglib:cglib-nodep:3.1'
    compile 'org.apache.commons:commons-lang3:3.3.1'
    compile 'org.codehaus.groovy:groovy-all:2.2.2'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

// projectGroup and projectVersion are defined in gradle.properties and
// will be used to name the jar files and in the generated .pom file.
group = projectGroup
version = projectVersion

defaultTasks 'clean', 'test', 'jacocoTestReport', 'jar', 'sourcesJar', 'javadocJar'

jar {
    manifest { attributes 'Main-Class': 'org.teasdale.Main' }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task fatjar(type: Jar) {
    classifier = 'fat'
    description = 'build a runnable jar with all transitive dependencies'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

def pomConfig = {
    inceptionYear '2014'

    name projectName
    description projectDescription
    packaging 'jar'
    url 'http://maven.apache.org'

    scm {
        url 'https://github.com/steasdal/arduino-serial'
        connection 'https://github.com/steasdal/arduino-serial.git'
        developerConnection 'https://github.com/steasdal/arduino-serial.git'
    }

    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/license/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }

    developers {
        developer {
            id 'steasdal'
            name 'Sam Teasdale'
            email 'samuel.teasdale@gmail.com'
            roles{
                role 'Developer'
            }
            timezone '-5'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom.withXml {
                asNode().children().last() + pomConfig
            }

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}
